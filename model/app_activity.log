2025-05-31 13:52:54,584 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 13:52:54,584 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 13:52:54,597 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 13:52:54,597 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 13:52:57,506 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 13:52:57,507 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 13:53:03,068 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 13:53:03,068 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 13:53:22,707 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 13:53:23,643 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 13:53:23,643 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 13:53:23,644 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 13:53:23,644 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 13:53:23,760 - __main__ - CRITICAL - Erro inesperado na execução principal: 'NewsProcessor' object has no attribute 'logger'
Traceback (most recent call last):
  File "/home/vitor/Solon-AI-/model/src/news_processor.py", line 59, in _load_known_entities
    self.logger.info(f"Carregadas {len(entities)} {entity_type}(s) do Neo4j.")
AttributeError: 'NewsProcessor' object has no attribute 'logger'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/vitor/Solon-AI-/model/main.py", line 100, in main
    processor = NewsProcessor(
  File "/home/vitor/Solon-AI-/model/src/news_processor.py", line 35, in __init__
    self.known_companies: List[Dict[str, Any]] = self._load_known_entities("company")
  File "/home/vitor/Solon-AI-/model/src/news_processor.py", line 61, in _load_known_entities
    self.logger.error(f"Erro ao carregar {entity_type}(s) do Neo4j: {e}", exc_info=True)
AttributeError: 'NewsProcessor' object has no attribute 'logger'
2025-05-31 13:53:23,762 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 13:53:23,762 - __main__ - INFO - Aplicação de análise de notícias finalizada.
2025-05-31 13:54:28,759 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 13:54:28,759 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 13:54:28,770 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 13:54:28,770 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 13:54:31,286 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 13:54:31,286 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 13:54:36,681 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 13:54:36,681 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 13:54:57,084 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 13:54:58,069 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 13:54:58,070 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 13:54:58,070 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 13:54:58,070 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 13:54:58,108 - src.news_processor - INFO - Carregadas 740 company(s) do Neo4j.
2025-05-31 13:54:58,118 - src.news_processor - INFO - Carregados 44 nomes de sector(s) distintos das propriedades das empresas no Neo4j.
2025-05-31 13:54:58,119 - src.news_processor - INFO - NewsProcessor inicializado. 740 empresas e 44 nomes de setores carregados.
2025-05-31 13:54:58,119 - __main__ - INFO - Iniciando processamento de 5 notícias.
2025-05-31 13:54:58,119 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 13:55:00,137 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA', 'Suzano Papel e Celulose SA'], Setores: ['Construção Civil', 'Financeiro']
2025-05-31 13:55:03,322 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:55:11,127 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:55:14,012 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 13:55:14,013 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 13:55:14,079 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:732, Hash: -8443365855336502415) MERGED no Neo4j.
2025-05-31 13:55:14,170 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:14,170 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:733, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:732).
2025-05-31 13:55:14,243 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,248 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,350 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,405 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,419 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:14,419 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:736, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:732).
2025-05-31 13:55:14,429 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,435 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,452 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,466 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,483 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:14,484 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:737, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:732).
2025-05-31 13:55:14,491 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,499 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:14,514 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,527 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:14,528 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 13:55:16,394 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Suzano Papel e Celulose SA'], Setores: ['Indústria', 'Financeiro']
2025-05-31 13:55:19,099 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:55:21,083 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:55:24,239 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 13:55:24,239 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 13:55:24,283 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739, Hash: 3831564964700742546) MERGED no Neo4j.
2025-05-31 13:55:24,295 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:24,295 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:741, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 13:55:24,359 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:24,435 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,445 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,458 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:24,458 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:743, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 13:55:24,462 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:24,477 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,489 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,497 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:55:24,497 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:744, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 13:55:24,509 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:55:24,522 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,531 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:55:24,532 - src.news_processor - INFO - Processando notícia: Menin e Flavio Rocha defendem Reforma Administrati...
2025-05-31 13:55:26,378 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Comércio Varejista']
2025-05-31 13:58:10,060 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:58:15,633 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:58:16,851 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 13:58:16,851 - __main__ - INFO - Aplicação de análise de notícias finalizada.
2025-05-31 13:58:19,142 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 13:58:19,142 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 13:58:19,150 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 13:58:19,150 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 13:58:21,531 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 13:58:21,532 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 13:58:27,271 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 13:58:27,271 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 13:58:48,505 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 13:58:49,597 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 13:58:49,597 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 13:58:49,598 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 13:58:49,598 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 13:58:49,640 - src.news_processor - INFO - Carregadas 740 company(s) do Neo4j.
2025-05-31 13:58:49,647 - src.news_processor - INFO - Carregados 44 nomes de sector(s) distintos das propriedades das empresas no Neo4j.
2025-05-31 13:58:49,647 - src.news_processor - INFO - NewsProcessor inicializado. 740 empresas e 44 nomes de setores carregados.
2025-05-31 13:58:49,647 - __main__ - INFO - Iniciando processamento de 5 notícias.
2025-05-31 13:58:49,647 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 13:58:51,640 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA', 'Suzano Papel e Celulose SA'], Setores: ['Construção Civil', 'Energia', 'Financeiro']
2025-05-31 13:58:54,029 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:58:56,641 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:59:00,365 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 13:59:00,366 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 13:59:00,381 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:745, Hash: 771953997933043610) MERGED no Neo4j.
2025-05-31 13:59:00,404 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:00,405 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:746, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:745).
2025-05-31 13:59:00,415 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,422 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,498 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,517 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,549 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,563 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:00,564 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:749, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:745).
2025-05-31 13:59:00,576 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,584 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,599 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,620 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,634 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,650 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:00,650 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:750, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:745).
2025-05-31 13:59:00,656 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,664 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:00,682 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,694 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,709 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:00,710 - src.news_processor - INFO - Notícia duplicada (hash: 771953997933043610, Título: Reação ao IOF: empresários def...) já processada. Pulando.
2025-05-31 13:59:00,710 - src.news_processor - INFO - Processando notícia: Menin e Flavio Rocha defendem Reforma Administrati...
2025-05-31 13:59:02,550 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Comércio Varejista']
2025-05-31 13:59:08,986 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:59:13,130 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:59:16,072 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 13:59:16,072 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Menin e Flavio Rocha defendem Reforma Administrativa para mo_multi_analysis.json
2025-05-31 13:59:16,082 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:751, Hash: -8907761904340841247) MERGED no Neo4j.
2025-05-31 13:59:16,099 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:16,100 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:752, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:751).
2025-05-31 13:59:16,107 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:16,189 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,205 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,226 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:16,226 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:754, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:751).
2025-05-31 13:59:16,239 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:16,255 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,266 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,279 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:16,279 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:755, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:751).
2025-05-31 13:59:16,290 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:16,303 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,315 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:16,316 - src.news_processor - INFO - Notícia duplicada (hash: -8907761904340841247, Título: Menin e Flavio Rocha defendem ...) já processada. Pulando.
2025-05-31 13:59:16,316 - src.news_processor - INFO - Processando notícia: Na guerra comercial entre EUA e China, latino-amer...
2025-05-31 13:59:18,435 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Grupo SBF', 'Vivara Participacoes SA', 'XP HOTEIS FDO INV IMOB FII', 'XP HOTEIS FII'], Setores: ['Comércio Varejista', 'Imobiliário', 'Turismo']
2025-05-31 13:59:43,492 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 13:59:46,310 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 13:59:49,060 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 13:59:49,062 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Na guerra comercial entre EUA e China, latino-americanos se _multi_analysis.json
2025-05-31 13:59:49,073 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:756, Hash: 195012733851759875) MERGED no Neo4j.
2025-05-31 13:59:49,153 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:49,154 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:757, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:756).
2025-05-31 13:59:49,160 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,171 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,175 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,185 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,197 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,211 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,232 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,243 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:49,244 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:760, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:756).
2025-05-31 13:59:49,252 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,257 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,268 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,274 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,289 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,304 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,315 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,330 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 13:59:49,330 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:761, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:756).
2025-05-31 13:59:49,339 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,343 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,353 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,399 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 13:59:49,410 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,423 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,434 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 13:59:49,436 - __main__ - INFO - Processamento de notícias concluído.
2025-05-31 13:59:49,436 - __main__ - INFO - --- Resultado da análise para notícia 1 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 13:59:49,436 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Pessoal: The news article highlights how prominent business figures like Rubens Menin from MRV Engenharia e Participacoes SA and Walter Schalka from Suzano Papel e Celulose SA are advocating for structural reforms and fiscal responsibility in response to the government's increase in IOF. As a conservative investor, this push for reforms and cost-cutting measures can be seen as positive for long-term economic stability and market confidence, potentially benefiting the investor's portfolio.
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Setorial: The news directly impacts the sectors of Construção Civil, Energia, and Financeiro, as key industry players are actively engaging in discussions to address the negative effects of the IOF increase. The calls for reform and reduction of government expenses can lead to a more stable economic environment, benefiting companies in these sectors like MRV Engenharia e Participacoes SA and Suzano Papel e Celulose SA. Hence, the sector score is relatively high as these sectors stand to benefit from potential policy changes.
2025-05-31 13:59:49,437 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Pessoal: The news article highlights how prominent entrepreneurs like Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose are advocating for structural reforms and fiscal responsibility in response to the government's increase in the IOF. This proactive stance by key figures in the construction and energy sectors can positively impact the investor's portfolio by promoting a more stable economic environment and potential policy changes that benefit these sectors.
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Setorial: The news underscores the concerns of the Construction and Energy sectors, represented by MRV Engenharia and Suzano Papel e Celulose, regarding the negative effects of the IOF increase on credit, exchange rates, and long-term savings. The sector is actively engaging with policymakers to address these issues and push for reforms, indicating a significant impact on the sectors involved. Additionally, the involvement of financial institutions and industry associations amplifies the sector-wide impact of the news.
2025-05-31 13:59:49,437 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Pessoal: The news highlights the impact of the increase in the IOF on the Brazilian business environment, with entrepreneurs like Rubens Menin and Walter Schalka advocating for structural reforms to address the government's deficit. As an Agressivo investor, who seeks high returns and is willing to take risks, the call for reforms and cost-cutting measures by key figures in the construction and pulp & paper sectors could indicate potential market volatility and opportunities for high returns.
2025-05-31 13:59:49,437 - __main__ - INFO -     Just. Setorial: The statements from key figures in the construction and pulp & paper sectors, such as Rubens Menin from MRV Engenharia and Walter Schalka from Suzano, emphasize the need for significant reforms to reduce government expenses. This could impact the Construction, Energy, and Financial sectors as discussions around simplifying taxes, modernizing the state, and privatization could lead to changes in regulations and market dynamics, affecting companies within these sectors. The joint efforts of business entities to push for the annulment of the IOF increase also indicate sector-wide concerns and potential shifts in investment strategies.
2025-05-31 13:59:49,438 - __main__ - INFO - --- Resultado da análise para notícia 2 (Título: Menin e Flavio Rocha defendem Reforma Administrati...) ---
2025-05-31 13:59:49,438 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa to modernize the Brazilian state, which aligns with a conservative investor's preference for fiscal responsibility and efficiency in government spending. Both Flavio Rocha and Rubens Menin emphasize the need for structural reforms and simplification of taxes, which can lead to a more stable economic environment. This focus on long-term sustainable growth and efficiency in resource management can positively impact a conservative investor's portfolio.
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Setorial: The news highlights the perspectives of key individuals from the Construção Civil and Comércio Varejista sectors, such as Rubens Menin from MRV Engenharia e Participacoes SA. The proposed reforms, including simplification of taxes and modernization of the state, can benefit companies in these sectors by potentially reducing bureaucratic hurdles, increasing efficiency, and promoting sustainable growth. The emphasis on structural changes and fiscal responsibility can create a more favorable business environment for companies in these sectors, leading to a positive impact on their performance.
2025-05-31 13:59:49,438 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Administrative Reform to modernize the Brazilian state, which can have a positive impact on the investor's portfolio by promoting efficiency in public resource management. Both Flavio Rocha and Rubens Menin emphasize the need for structural reforms and simplification of taxes, which can lead to a more stable economic environment, benefiting companies like MRV Engenharia e Participacoes SA. The investor's portfolio is likely to benefit from these proposed reforms, hence the high score.
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Setorial: The focus on the Administrative Reform and structural changes in the public sector can positively impact the Construction and Retail sectors. The emphasis on efficiency, simplification of taxes, and modernization of the state can create a more business-friendly environment, benefiting companies like MRV Engenharia e Participacoes SA operating in the Construction sector and related retail activities. The proposed measures can lead to sustainable growth and economic stability in these sectors, hence the moderately high score.
2025-05-31 13:59:49,438 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.75
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa to modernize the Brazilian state, which can have a significant impact on the investor's portfolio, especially in terms of government efficiency and potential economic growth. Both Flavio Rocha and Rubens Menin emphasize the need for structural reforms, simplification of taxes, and modernization of the state, which align with the investor's aggressive profile seeking growth opportunities.
2025-05-31 13:59:49,438 - __main__ - INFO -     Just. Setorial: The news directly impacts the Construção Civil and Comércio Varejista sectors, as highlighted by Rubens Menin's statements regarding the urgent need for structural reforms to unlock the economy and ensure sustainable growth. The focus on efficiency in public resource management and potential policy changes related to fiscal adjustments can positively influence these sectors, leading to improved business environments and growth prospects.
2025-05-31 13:59:49,439 - __main__ - INFO - --- Resultado da análise para notícia 3 (Título: Na guerra comercial entre EUA e China, latino-amer...) ---
2025-05-31 13:59:49,439 - __main__ - INFO -   Perfil Conservador: Pessoal=3.5, Setorial=4.0
2025-05-31 13:59:49,439 - __main__ - INFO -     Just. Pessoal: Considering the conservative profile, the investor's portfolio might experience moderate impact due to the shift towards closer economic ties with China in the region. This could lead to potential changes in trade dynamics and investment opportunities, requiring a cautious approach.
2025-05-31 13:59:49,439 - __main__ - INFO -     Just. Setorial: The sectors of Retail, Real Estate, and Tourism could experience a significant impact as the news highlights a growing preference for closer economic relationships with China over the US in Latin America. This shift in sentiment could lead to changes in market dynamics, investment patterns, and business strategies within these sectors.
2025-05-31 13:59:49,440 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=4.0
2025-05-31 13:59:49,440 - __main__ - INFO -     Just. Pessoal: The news of Latin American countries aligning with China in the trade war with the US could have a moderate impact on the investor's portfolio. As the focus companies and sectors are not directly mentioned in the news, the impact is more indirect and may lead to changes in trade dynamics affecting the overall market sentiment.
2025-05-31 13:59:49,440 - __main__ - INFO -     Just. Setorial: The news indicates a shift towards closer economic ties with China in Latin America, potentially benefiting sectors like Retail, Real Estate, and Tourism. This alignment could open up new opportunities for companies operating in these sectors, such as Grupo SBF, Vivara Participacoes SA, XP HOTEIS FDO INV IMOB FII, and XP HOTEIS FII, leading to a positive impact on the sector/company performance.
2025-05-31 13:59:49,440 - __main__ - INFO -   Perfil Agressivo: Pessoal=3.5, Setorial=4.0
2025-05-31 13:59:49,440 - __main__ - INFO -     Just. Pessoal: Given the Agressivo investor profile, the news of Latin American countries aligning with China in the trade war could have a moderate impact on the portfolio. This shift in economic ties may lead to changes in investment strategies and potential opportunities in different markets.
2025-05-31 13:59:49,440 - __main__ - INFO -     Just. Setorial: The news indicates a significant impact on the sectors of Comércio Varejista, Imobiliário, and Turismo due to the potential shift towards closer economic relations with China. Companies like Grupo SBF, Vivara Participacoes SA, XP HOTEIS FDO INV IMOB FII, and XP HOTEIS FII operating in these sectors may benefit from increased trade and investment opportunities with China, leading to a positive impact on their performance.
2025-05-31 13:59:49,440 - __main__ - INFO - 3/5 notícias efetivamente processadas e resultaram em uma análise.
2025-05-31 13:59:49,441 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 13:59:49,441 - __main__ - INFO - Aplicação de análise de notícias finalizada.
2025-05-31 14:13:28,567 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 14:13:28,568 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 14:13:28,581 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 14:13:28,581 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 14:13:31,120 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 14:13:31,121 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 14:13:36,545 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 14:13:36,546 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 14:13:57,149 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 14:13:58,144 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 14:13:58,144 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 14:13:58,144 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 14:13:58,144 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 14:13:58,178 - src.news_processor - INFO - Carregadas 740 company(s) do Neo4j.
2025-05-31 14:13:58,184 - src.news_processor - INFO - Carregados 44 nomes de sector(s) distintos das propriedades das empresas no Neo4j.
2025-05-31 14:13:58,184 - src.news_processor - INFO - NewsProcessor inicializado. 740 empresas e 44 nomes de setores carregados.
2025-05-31 14:13:58,184 - __main__ - INFO - Iniciando processamento de 5 notícias.
2025-05-31 14:13:58,185 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 14:14:00,223 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Suzano Papel e Celulose SA'], Setores: ['Indústria', 'Financeiro']
2025-05-31 14:14:02,502 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:14:05,889 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:14:08,609 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:14:08,610 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 14:14:08,662 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:637, Hash: 115087021890847189) MERGED no Neo4j.
2025-05-31 14:14:08,729 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:08,730 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:638, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:637).
2025-05-31 14:14:08,790 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:08,891 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,900 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,915 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:08,915 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:641, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:637).
2025-05-31 14:14:08,923 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:08,934 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,949 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,961 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:08,961 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:643, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:637).
2025-05-31 14:14:08,968 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:08,983 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,999 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:08,999 - src.news_processor - INFO - Notícia duplicada (hash: 115087021890847189, Título: Reação ao IOF: empresários def...) já processada. Pulando.
2025-05-31 14:14:09,000 - src.news_processor - INFO - Processando notícia: Menin e Flavio Rocha defendem Reforma Administrati...
2025-05-31 14:14:10,877 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Comércio Varejista']
2025-05-31 14:14:13,793 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:14:17,640 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:14:20,899 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:14:20,900 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Menin e Flavio Rocha defendem Reforma Administrativa para mo_multi_analysis.json
2025-05-31 14:14:20,952 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:644, Hash: -3564606413812781287) MERGED no Neo4j.
2025-05-31 14:14:20,966 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:20,966 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:645, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:644).
2025-05-31 14:14:21,034 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:21,092 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,109 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,123 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:21,124 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:648, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:644).
2025-05-31 14:14:21,130 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:21,142 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,155 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,173 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:21,173 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:649, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:644).
2025-05-31 14:14:21,182 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:21,193 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,209 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:21,209 - src.news_processor - INFO - Notícia duplicada (hash: -3564606413812781287, Título: Menin e Flavio Rocha defendem ...) já processada. Pulando.
2025-05-31 14:14:21,209 - src.news_processor - INFO - Processando notícia: Na guerra comercial entre EUA e China, latino-amer...
2025-05-31 14:14:23,339 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Apple Inc BDR', 'Amazon.com Inc BDR', 'Facebook Inc BDR', 'Microsoft Corp BDR'], Setores: ['Comércio Varejista', 'Tecnologia', 'Tecnologia da Informação']
2025-05-31 14:14:26,493 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:14:29,137 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:14:31,475 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:14:31,477 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Na guerra comercial entre EUA e China, latino-americanos se _multi_analysis.json
2025-05-31 14:14:31,482 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:650, Hash: -3451824927620006138) MERGED no Neo4j.
2025-05-31 14:14:31,499 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:31,500 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:651, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:650).
2025-05-31 14:14:31,510 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,515 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,526 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,531 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,550 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,613 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,628 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,643 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:31,644 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:654, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:650).
2025-05-31 14:14:31,648 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,659 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,663 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,677 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,693 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,707 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,716 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,730 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:14:31,731 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:655, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:650).
2025-05-31 14:14:31,738 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,745 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,752 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,761 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:14:31,776 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,786 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,798 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:14:31,798 - __main__ - INFO - Processamento de notícias concluído.
2025-05-31 14:14:31,799 - __main__ - INFO - --- Resultado da análise para notícia 1 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 14:14:31,799 - __main__ - INFO -   Perfil Conservador: Pessoal=3.5, Setorial=4.0
2025-05-31 14:14:31,799 - __main__ - INFO -     Just. Pessoal: The news about the increase in IOF and the discussions around necessary reforms and public spending cuts may lead to some uncertainty in the market, impacting the investor's conservative portfolio. However, the partial revocation of the measure and the focus on structural reforms could provide some stability. Therefore, a moderate impact score is assigned.
2025-05-31 14:14:31,799 - __main__ - INFO -     Just. Setorial: The news directly impacts the Financial sector due to the increase in IOF and discussions on government spending. Companies like Suzano, being part of the Industria sector, are indirectly affected by the economic environment shaped by these discussions. The sector and companies involved are actively advocating for reforms and cost-cutting measures, indicating a significant impact on their operations and future prospects. Hence, a relatively high impact score is assigned.
2025-05-31 14:14:31,799 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=4.0
2025-05-31 14:14:31,800 - __main__ - INFO -     Just. Pessoal: The news about the increase in the IOF and the call for reforms and public spending cuts by prominent businessmen like Walter Schalka, a board member of Suzano, could create uncertainty in the financial markets, impacting moderate investors' portfolios. The focus on structural reforms and fiscal responsibility may lead to market volatility and affect investment decisions.
2025-05-31 14:14:31,800 - __main__ - INFO -     Just. Setorial: The news highlights the concerns of the industry and financial sectors regarding the government's tax policy changes. The statements from business leaders and industry associations, including Suzano's board member, indicate a strong push for reforms and cost-cutting measures, which could impact companies in these sectors. The sector score is higher due to the direct involvement of key industry players and the potential implications for the overall sector performance.
2025-05-31 14:14:31,800 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:14:31,801 - __main__ - INFO -     Just. Pessoal: The news article discusses how the increase in the IOF impacts the business environment in Brazil, with prominent entrepreneurs like Walter Schalka from Suzano advocating for structural reforms to address the government's deficit. As an Agressivo investor, this news signals potential market volatility and the need for proactive investment strategies to navigate the changing economic landscape.
2025-05-31 14:14:31,801 - __main__ - INFO -     Just. Setorial: The article highlights the reactions of key players in the Financeiro and Indústria sectors, such as the CNF president and entrepreneurs from different industries, advocating for reforms and cost-cutting measures. This collective push for policy changes indicates a significant impact on these sectors, potentially leading to adjustments in investment strategies and market performance.
2025-05-31 14:14:31,801 - __main__ - INFO - --- Resultado da análise para notícia 2 (Título: Menin e Flavio Rocha defendem Reforma Administrati...) ---
2025-05-31 14:14:31,801 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.75
2025-05-31 14:14:31,802 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Administrative Reform to modernize the Brazilian state, which aligns with a Conservative investor's interest in efficient public resource management. The support from key figures like Rubens Menin and Flavio Rocha for structural reforms indicates a positive outlook for economic stability and growth, influencing the investor's portfolio positively.
2025-05-31 14:14:31,802 - __main__ - INFO -     Just. Setorial: The focus on the Construction and Retail sectors in the news, particularly with key companies like MRV Engenharia e Participacoes SA, highlights the sector's relevance in advocating for administrative reforms. The emphasis on simplifying taxes, modernizing the state, and promoting efficiency resonates well with these sectors, indicating a strong positive impact on them.
2025-05-31 14:14:31,803 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 14:14:31,804 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa for modernizing the Brazilian state, which aligns with the moderate investor's interest in stable economic reforms. Both Flavio Rocha and Rubens Menin emphasize the need for structural reforms to promote efficiency in public resource management, which can lead to a more stable economic environment. Menin's focus on simplifying taxes and modernizing the state directly impacts the construction and retail sectors, where MRV Engenharia e Participacoes SA operates.
2025-05-31 14:14:31,805 - __main__ - INFO -     Just. Setorial: The news highlights the significance of the Reforma Administrativa in improving the efficiency of public resources and promoting sustainable economic growth. The emphasis on simplifying taxes and modernizing the state by key figures like Rubens Menin can positively impact the Construção Civil and Comércio Varejista sectors. The proposed reforms can lead to a more favorable business environment and potentially boost investments in these sectors.
2025-05-31 14:14:31,805 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:14:31,806 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa to modernize the Brazilian state, which can have a significant impact on the investor's portfolio, especially considering the emphasis on efficiency in public resource management. Both Flavio Rocha and Rubens Menin, key figures in the Construção Civil and Comércio Varejista sectors, advocate for structural reforms that can positively influence the economic environment, aligning with the aggressive investor profile's interest in long-term sustainable growth.
2025-05-31 14:14:31,806 - __main__ - INFO -     Just. Setorial: The focus on advocating for structural reforms like the Reforma Administrativa by key figures in the Construção Civil and Comércio Varejista sectors, such as Rubens Menin from MRV Engenharia e Participacoes SA, indicates a strong push for efficiency and modernization within these sectors. This emphasis on reform and efficiency can lead to improved business environments, increased investments, and overall growth potential, justifying a high impact score for the sectors/companies primarily discussed in the news.
2025-05-31 14:14:31,807 - __main__ - INFO - --- Resultado da análise para notícia 3 (Título: Na guerra comercial entre EUA e China, latino-amer...) ---
2025-05-31 14:14:31,807 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 14:14:31,808 - __main__ - INFO -     Just. Pessoal: The news indicates a shift in economic alliances towards China in Latin America due to the US-China trade war. As a conservative investor, this geopolitical change may impact the portfolio negatively due to potential disruptions in US-based companies like Apple, Amazon, Facebook, and Microsoft. The increased preference for closer economic ties with China could lead to uncertainties and risks for the investor's portfolio.
2025-05-31 14:14:31,808 - __main__ - INFO -     Just. Setorial: The news highlights the growing support for more trade with China in Latin America, impacting sectors like Retail, Technology, and Information Technology. Companies like Apple, Amazon, Facebook, and Microsoft, which are major players in these sectors, could face challenges or opportunities based on the changing economic relationships. This shift in trade preferences could affect the performance and strategies of companies operating in these sectors.
2025-05-31 14:14:31,808 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=4.0
2025-05-31 14:14:31,809 - __main__ - INFO -     Just. Pessoal: The news of Latin American countries aligning more closely with China in the US-China trade war could have a moderate impact on the investor's portfolio. This shift in economic ties could affect the performance of companies like Apple, Amazon, Facebook, and Microsoft, which have significant exposure to international markets, including China.
2025-05-31 14:14:31,809 - __main__ - INFO -     Just. Setorial: The news indicates a significant impact on the Technology and Information Technology sectors, as well as potentially on the Retail sector. Companies like Apple, Amazon, Facebook, and Microsoft, operating in the Technology sector, may face changes in trade dynamics and market opportunities due to the shifting alliances. This could lead to increased volatility and strategic adjustments within these sectors.
2025-05-31 14:14:31,809 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:14:31,809 - __main__ - INFO -     Just. Pessoal: Given the Agressivo investor profile, the news of Latin American countries aligning with China in the trade war between the US and China can have a significant impact on the investor's portfolio. This shift in economic alliances could lead to changes in market dynamics, affecting the performance of technology and retail companies like Apple, Amazon, Facebook, and Microsoft in the investor's portfolio.
2025-05-31 14:14:31,810 - __main__ - INFO -     Just. Setorial: The news indicates a growing preference for closer economic ties with China among Latin American countries, potentially benefiting sectors like Technology and Information Technology. This shift in trade relationships could create new opportunities for companies operating in these sectors, impacting their growth and market position positively.
2025-05-31 14:14:31,810 - __main__ - INFO - 3/5 notícias efetivamente processadas e resultaram em uma análise.
2025-05-31 14:14:31,810 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 14:14:31,811 - __main__ - INFO - Aplicação de análise de notícias finalizada.
2025-05-31 14:14:56,937 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 14:14:56,937 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 14:14:56,948 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 14:14:56,949 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 14:14:59,701 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 14:14:59,702 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 14:15:05,116 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 14:15:05,116 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 14:15:25,456 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 14:15:26,468 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 14:15:26,469 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 14:15:26,469 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 14:15:26,469 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 14:15:26,502 - src.news_processor - INFO - Carregadas 740 company(s) do Neo4j.
2025-05-31 14:15:26,508 - src.news_processor - INFO - Carregados 44 nomes de sector(s) distintos das propriedades das empresas no Neo4j.
2025-05-31 14:15:26,509 - src.news_processor - INFO - NewsProcessor inicializado. 740 empresas e 44 nomes de setores carregados.
2025-05-31 14:15:26,510 - __main__ - INFO - Iniciando processamento de 5 notícias.
2025-05-31 14:15:26,511 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 14:15:30,206 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA', 'Suzano Papel e Celulose SA'], Setores: ['Construção Civil', 'Financeiro']
2025-05-31 14:15:32,794 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:15:34,949 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:15:37,575 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:15:37,576 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 14:15:37,589 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:656, Hash: -1345137433413817214) MERGED no Neo4j.
2025-05-31 14:15:37,603 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:37,604 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:657, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:656).
2025-05-31 14:15:37,669 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,674 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,687 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,703 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,717 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:37,717 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:659, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:656).
2025-05-31 14:15:37,722 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,733 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,747 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,759 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,776 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:37,776 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:660, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:656).
2025-05-31 14:15:37,783 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,790 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:37,804 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,815 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:37,816 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 14:15:40,003 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA', 'Suzano Papel e Celulose SA'], Setores: ['Construção Civil', 'Consultoria Financeira']
2025-05-31 14:15:42,539 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:15:44,772 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:15:47,406 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:15:47,407 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 14:15:47,416 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:661, Hash: -8508240003644244236) MERGED no Neo4j.
2025-05-31 14:15:47,429 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:47,429 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:662, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:661).
2025-05-31 14:15:47,434 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,443 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,479 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,507 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,528 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:47,528 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:664, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:661).
2025-05-31 14:15:47,546 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,553 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,569 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,580 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,656 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:15:47,656 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:665, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:661).
2025-05-31 14:15:47,661 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,668 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:15:47,679 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,753 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:15:47,753 - src.news_processor - INFO - Processando notícia: Menin e Flavio Rocha defendem Reforma Administrati...
2025-05-31 14:15:49,728 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Comércio Varejista']
2025-05-31 14:15:53,622 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:16:13,835 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:16:16,578 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:16:16,579 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Menin e Flavio Rocha defendem Reforma Administrativa para mo_multi_analysis.json
2025-05-31 14:16:16,592 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:666, Hash: -410865467192356652) MERGED no Neo4j.
2025-05-31 14:16:16,602 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:16,603 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:667, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:666).
2025-05-31 14:16:16,613 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:16:16,627 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,638 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,653 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:16,653 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:668, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:666).
2025-05-31 14:16:16,662 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:16:16,677 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,689 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,706 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:16,706 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:669, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:666).
2025-05-31 14:16:16,712 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:16:16,727 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,740 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:16,740 - src.news_processor - INFO - Notícia duplicada (hash: -410865467192356652, Título: Menin e Flavio Rocha defendem ...) já processada. Pulando.
2025-05-31 14:16:16,741 - src.news_processor - INFO - Processando notícia: Na guerra comercial entre EUA e China, latino-amer...
2025-05-31 14:16:18,708 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: [], Setores: ['Energia', 'Comércio Varejista', 'Consultoria Empresarial', 'Indústria', 'Finanças']
2025-05-31 14:16:27,682 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:16:29,733 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:16:32,699 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:16:32,701 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Na guerra comercial entre EUA e China, latino-americanos se _multi_analysis.json
2025-05-31 14:16:32,711 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:670, Hash: 2628748180602431744) MERGED no Neo4j.
2025-05-31 14:16:32,727 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:32,728 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:671, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:670).
2025-05-31 14:16:32,744 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,758 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,770 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,790 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,850 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,863 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:32,863 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:676, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:670).
2025-05-31 14:16:32,878 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,894 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,909 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,925 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,940 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,956 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:16:32,956 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:677, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:670).
2025-05-31 14:16:32,969 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,981 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:32,998 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:33,012 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:33,025 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:16:33,025 - __main__ - INFO - Processamento de notícias concluído.
2025-05-31 14:16:33,026 - __main__ - INFO - --- Resultado da análise para notícia 1 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 14:16:33,026 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,026 - __main__ - INFO -     Just. Pessoal: The news highlights the concerns of business leaders like Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose regarding the impact of the IOF increase on government finances. Their calls for structural reforms and cost-cutting measures indicate a potential positive impact on the investor's conservative portfolio by promoting fiscal responsibility and economic stability.
2025-05-31 14:16:33,026 - __main__ - INFO -     Just. Setorial: The news directly impacts the Finance sector due to the discussions around the IOF increase and its effects on credit, exchange rates, and long-term savings. Additionally, the involvement of entities like CNF and CNseg in pushing for the annulment of the decree shows a unified effort within the sector to address the negative consequences of the government's decision. This collective action suggests a significant impact on the sector's future regulatory environment and financial dynamics.
2025-05-31 14:16:33,026 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,027 - __main__ - INFO -     Just. Pessoal: The news highlights the concerns of prominent businessmen like Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose regarding the impact of the IOF increase and the need for structural reforms. As a Moderado investor, the call for reforms and fiscal responsibility can lead to increased market stability and potential long-term growth, hence the high impact score.
2025-05-31 14:16:33,027 - __main__ - INFO -     Just. Setorial: The news directly impacts the Financeiro sector due to the discussions around the IOF increase and its effects on credit, exchange rates, and long-term savings. Additionally, the involvement of entities like CNF and the planned meetings with political leaders indicate a significant sector-wide response to the issue, warranting a solid impact score.
2025-05-31 14:16:33,027 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,027 - __main__ - INFO -     Just. Pessoal: The news article highlights prominent figures from the construction and financial sectors, such as Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose, advocating for structural reforms and fiscal responsibility in response to the government's IOF increase. As an Agressivo investor, who seeks high returns through riskier investments, the call for reforms and cost-cutting measures can indicate potential market volatility and policy changes, impacting investment decisions significantly.
2025-05-31 14:16:33,027 - __main__ - INFO -     Just. Setorial: The news underscores the concerns and actions of key players in the Construction and Financial sectors, urging for reforms to address the government's fiscal deficit. The involvement of major companies like MRV Engenharia and Suzano Papel e Celulose in these discussions reflects a sector-wide impact. The push for reforms and the potential implications on credit, exchange rates, and long-term savings could affect the performance and outlook of these sectors, warranting a high impact score.
2025-05-31 14:16:33,027 - __main__ - INFO - --- Resultado da análise para notícia 2 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 14:16:33,027 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Pessoal: The news highlights the concerns of business leaders like Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose regarding the impact of the increased IOF on government finances. Their calls for structural reforms and cost-cutting measures align with a conservative investor's preference for stability and fiscal responsibility, hence a high impact score.
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Setorial: The construction and financial consulting sectors, represented by MRV Engenharia and Suzano Papel e Celulose, are directly impacted by the proposed reforms and cost-cutting measures advocated by the business leaders in the news. The discussions around simplifying taxes, modernizing the state, and reducing government expenses could significantly affect these sectors, warranting a considerable impact score.
2025-05-31 14:16:33,028 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Pessoal: The news article discusses how prominent business figures like Rubens Menin from MRV Engenharia e Participacoes SA and Walter Schalka from Suzano Papel e Celulose SA are advocating for structural reforms and cost-cutting measures in response to the government's increase in the IOF. This proactive stance by key figures in the construction and financial consulting sectors can positively impact the investor's portfolio by promoting a more stable economic environment and potentially leading to long-term growth.
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Setorial: The news highlights the concerns and proposals put forward by companies in the Construction and Financial Consulting sectors, such as MRV Engenharia e Participacoes SA and Suzano Papel e Celulose SA, regarding the negative effects of the IOF increase on the economy. The sector score is high as these discussions and advocacy for reforms can influence policies that directly impact these sectors, potentially leading to improved conditions and opportunities for companies operating within them.
2025-05-31 14:16:33,028 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Pessoal: The news highlights the impact of increased IOF on businesses, with prominent figures like Rubens Menin from MRV Engenharia e Walter Schalka from Suzano Papel e Celulose advocating for structural reforms and cost-cutting measures. As an Agressivo investor, the focus on government fiscal policies and potential reforms can lead to market volatility and impact investment decisions, warranting a high personal score.
2025-05-31 14:16:33,028 - __main__ - INFO -     Just. Setorial: The construction and financial consulting sectors, represented by MRV Engenharia and Suzano Papel e Celulose, are directly affected by the proposed measures to address the government's fiscal deficit. The calls for reform and cost reduction in the news can impact these sectors significantly, leading to a moderate to high sector score.
2025-05-31 14:16:33,029 - __main__ - INFO - --- Resultado da análise para notícia 3 (Título: Menin e Flavio Rocha defendem Reforma Administrati...) ---
2025-05-31 14:16:33,029 - __main__ - INFO -   Perfil Conservador: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,029 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa to modernize the Brazilian state, which aligns with a conservative investor's preference for efficiency and fiscal responsibility. Both Flavio Rocha and Rubens Menin advocate for structural reforms and efficiency in public resource management, which can lead to a more stable economic environment. This emphasis on reform and sustainable growth can positively impact a conservative investor's portfolio.
2025-05-31 14:16:33,029 - __main__ - INFO -     Just. Setorial: The news highlights the perspectives of key individuals from the Construção Civil and Comércio Varejista sectors, such as Rubens Menin from MRV Engenharia e Participacoes SA. The proposed reforms, including simplification of taxes and modernization of the state, can benefit these sectors by promoting a more business-friendly environment and sustainable economic growth. Therefore, the sector and companies involved are likely to experience a positive impact from the proposed reforms.
2025-05-31 14:16:33,029 - __main__ - INFO -   Perfil Moderado: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,030 - __main__ - INFO -     Just. Pessoal: The news article discusses the importance of the Reforma Administrativa to modernize the Brazilian state, which can have a positive impact on the investor's portfolio by promoting efficiency in public resource management and potentially leading to sustainable economic growth. Both Flavio Rocha and Rubens Menin emphasize the need for structural reforms, aligning with a moderate investor's interest in stable and sustainable economic policies.
2025-05-31 14:16:33,030 - __main__ - INFO -     Just. Setorial: The news directly impacts the Construção Civil and Comércio Varejista sectors, as highlighted by Rubens Menin's statements advocating for structural reforms to simplify taxes, modernize the state, and unlock the economy. The focus on efficiency and sustainable growth aligns with the interests of companies like MRV Engenharia e Participacoes SA in these sectors, potentially leading to positive developments and growth opportunities.
2025-05-31 14:16:33,030 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,030 - __main__ - INFO -     Just. Pessoal: The news article highlights the importance of the approval of the Administrative Reform, which is supported by key figures like Flavio Rocha and Rubens Menin. As an Agressivo investor focused on companies like MRV Engenharia e Participacoes SA in the Construção Civil and Comércio Varejista sectors, the push for structural reforms and efficiency in public resource management can lead to a more stable economic environment, potentially benefiting the investor's portfolio.
2025-05-31 14:16:33,030 - __main__ - INFO -     Just. Setorial: The emphasis on structural reforms, simplification of taxes, and modernization of the state in the news is particularly relevant to the Construção Civil and Comércio Varejista sectors. The proposed measures aim to unlock economic growth and ensure long-term sustainability, which could positively impact companies like MRV Engenharia e Participacoes SA operating in these sectors.
2025-05-31 14:16:33,030 - __main__ - INFO - --- Resultado da análise para notícia 4 (Título: Na guerra comercial entre EUA e China, latino-amer...) ---
2025-05-31 14:16:33,031 - __main__ - INFO -   Perfil Conservador: Pessoal=3.5, Setorial=4.0
2025-05-31 14:16:33,031 - __main__ - INFO -     Just. Pessoal: Considering the conservative profile of the investor, the news of Latin American countries aligning with China in the trade war between the US and China may raise concerns about potential shifts in trade dynamics and geopolitical risks. This could lead to increased market volatility and uncertainty, impacting the investor's portfolio moderately.
2025-05-31 14:16:33,031 - __main__ - INFO -     Just. Setorial: The news has a significant impact on the sectors of Energy, Retail Trade, Business Consulting, Industry, and Finance. The growing alignment of Latin American countries with China in response to US tariffs could lead to changes in trade patterns, investment flows, and business opportunities within these sectors. This shift in economic alliances may benefit companies involved in trade with China while posing challenges for those more reliant on US trade relations, thus impacting the sectors involved considerably.
2025-05-31 14:16:33,031 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=4.0
2025-05-31 14:16:33,031 - __main__ - INFO -     Just. Pessoal: Considering the Moderate investor profile, the news indicating a shift towards closer economic ties with China in Latin America could lead to increased diversification opportunities but also potential risks due to geopolitical tensions. The investor may need to reassess their portfolio allocation and risk management strategies.
2025-05-31 14:16:33,031 - __main__ - INFO -     Just. Setorial: The news highlights a significant impact on the sectors of Energy, Retail Trade, Business Consulting, Industry, and Finance, as Latin American countries are considering closer economic relationships with China over the US. This shift can lead to new business opportunities, investments, and trade dynamics within these sectors, potentially benefiting companies involved in trade with China.
2025-05-31 14:16:33,032 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=4.0
2025-05-31 14:16:33,032 - __main__ - INFO -     Just. Pessoal: The news indicates a shift in economic alliances towards China in Latin America, which could impact the investor's portfolio negatively due to potential disruptions in US-China trade relations. As an Agressivo investor, who typically seeks high returns and is willing to take on higher risks, this shift may lead to increased volatility and uncertainty in the portfolio, hence the high impact score.
2025-05-31 14:16:33,033 - __main__ - INFO -     Just. Setorial: The news highlights the sectors of Energy, Retail, Business Consulting, Industry, and Finance being influenced by the growing alignment of Latin American countries with China. This alignment could lead to changes in trade dynamics, investment opportunities, and financing sources within these sectors, impacting companies operating in them. Therefore, a significant impact score is assigned to the sectors/companies primarily discussed in the news.
2025-05-31 14:16:33,034 - __main__ - INFO - 4/5 notícias efetivamente processadas e resultaram em uma análise.
2025-05-31 14:16:33,034 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 14:16:33,035 - __main__ - INFO - Aplicação de análise de notícias finalizada.
2025-05-31 14:20:28,677 - __main__ - INFO - Iniciando aplicação de análise de notícias.
2025-05-31 14:20:28,678 - __main__ - INFO - Todos os arquivos de prompt foram encontrados.
2025-05-31 14:20:28,688 - src.neo4j_connection - INFO - Conexão Neo4j estabelecida e verificada.
2025-05-31 14:20:28,688 - __main__ - INFO - Inicializando leitor de notícias...
2025-05-31 14:20:31,480 - src.new_scrapper - INFO - Navegador Firefox inicializado.
2025-05-31 14:20:31,481 - src.new_scrapper - INFO - Carregando links de notícias de: https://www.infomoney.com.br/economia/
2025-05-31 14:20:36,853 - src.new_scrapper - INFO - 20 links de artigos potencialmente relevantes adicionados de https://www.infomoney.com.br/economia/. Total: 20.
2025-05-31 14:20:36,853 - src.new_scrapper - INFO - Iniciando busca de artigos. Links para processar: 20
2025-05-31 14:20:57,223 - src.new_scrapper - INFO - Busca de artigos concluída. 5 artigos coletados.
2025-05-31 14:20:58,206 - src.new_scrapper - INFO - Navegador Firefox fechado.
2025-05-31 14:20:58,207 - __main__ - INFO - 5 notícias carregadas para processamento.
2025-05-31 14:20:58,207 - __main__ - INFO - Configurando cliente AI para o serviço: openAI
2025-05-31 14:20:58,207 - __main__ - INFO - Cliente LLM inicializado usando modelo: gpt-3.5-turbo
2025-05-31 14:20:58,251 - src.news_processor - INFO - Carregadas 740 company(s) do Neo4j.
2025-05-31 14:20:58,262 - src.news_processor - INFO - Carregados 44 nomes de sector(s) distintos das propriedades das empresas no Neo4j.
2025-05-31 14:20:58,263 - src.news_processor - INFO - NewsProcessor inicializado. 740 empresas e 44 nomes de setores carregados.
2025-05-31 14:20:58,263 - __main__ - INFO - Iniciando processamento de 5 notícias.
2025-05-31 14:20:58,263 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 14:21:00,389 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA', 'Suzano Papel e Celulose SA'], Setores: ['Construção Civil', 'Consultoria Financeira']
2025-05-31 14:21:02,552 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:21:04,901 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:21:07,968 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:21:07,969 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 14:21:08,029 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:646, Hash: 5652213569036113785) MERGED no Neo4j.
2025-05-31 14:21:08,091 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:08,092 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:647, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:646).
2025-05-31 14:21:08,144 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,153 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,254 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,267 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,276 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:08,276 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:658, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:646).
2025-05-31 14:21:08,284 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,289 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,304 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,313 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,323 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:08,324 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:663, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:646).
2025-05-31 14:21:08,334 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,338 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:08,350 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,358 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:08,359 - src.news_processor - INFO - Processando notícia: Reação ao IOF: empresários defendem reformas e cor...
2025-05-31 14:21:10,506 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Suzano Papel e Celulose SA', 'MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Financeiro']
2025-05-31 14:21:13,570 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:21:15,826 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:21:19,312 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:21:19,313 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Reação ao IOF_ empresários defendem reformas e corte de gast_multi_analysis.json
2025-05-31 14:21:19,355 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:672, Hash: 1133472447341402310) MERGED no Neo4j.
2025-05-31 14:21:19,363 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:19,364 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:673, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:672).
2025-05-31 14:21:19,424 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,429 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,543 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,553 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,565 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:19,565 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:675, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:672).
2025-05-31 14:21:19,574 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,583 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,598 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,612 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,628 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:21:19,628 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:684, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:672).
2025-05-31 14:21:19,634 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,644 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:21:19,657 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,675 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:21:19,675 - src.news_processor - INFO - Processando notícia: Menin e Flavio Rocha defendem Reforma Administrati...
2025-05-31 14:21:21,402 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['MRV Engenharia e Participacoes SA'], Setores: ['Construção Civil', 'Comércio Varejista']
2025-05-31 14:21:23,544 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:22:09,171 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:22:11,339 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:22:11,339 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Menin e Flavio Rocha defendem Reforma Administrativa para mo_multi_analysis.json
2025-05-31 14:22:11,349 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:705, Hash: -6274409093506770641) MERGED no Neo4j.
2025-05-31 14:22:11,360 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:11,360 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:714, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:705).
2025-05-31 14:22:11,368 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:11,384 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,395 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,406 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:11,407 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:736, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:705).
2025-05-31 14:22:11,416 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:11,429 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,441 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,456 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:11,456 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:737, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:705).
2025-05-31 14:22:11,463 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:11,482 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,495 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:11,496 - src.news_processor - INFO - Notícia duplicada (hash: -6274409093506770641, Título: Menin e Flavio Rocha defendem ...) já processada. Pulando.
2025-05-31 14:22:11,496 - src.news_processor - INFO - Processando notícia: Na guerra comercial entre EUA e China, latino-amer...
2025-05-31 14:22:13,418 - src.news_processor - INFO - Entidades identificadas pela LLM: Empresas: ['Apple Inc BDR', 'Amazon.com Inc BDR', 'Facebook Inc BDR', 'Microsoft Corp BDR'], Setores: ['Comércio Varejista', 'Tecnologia', 'Tecnologia da Informação']
2025-05-31 14:22:15,377 - src.news_processor - INFO - Análise de impacto para perfil 'Conservador' recebida.
2025-05-31 14:22:17,580 - src.news_processor - INFO - Análise de impacto para perfil 'Moderado' recebida.
2025-05-31 14:22:20,598 - src.news_processor - INFO - Análise de impacto para perfil 'Agressivo' recebida.
2025-05-31 14:22:20,599 - src.news_processor - INFO - Resultado salvo em: output/analysis_results/Na guerra comercial entre EUA e China, latino-americanos se _multi_analysis.json
2025-05-31 14:22:20,608 - src.news_processor - INFO - Nó de Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739, Hash: 8194855196053784158) MERGED no Neo4j.
2025-05-31 14:22:20,620 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:20,620 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:741, Perfil: Conservador) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 14:22:20,629 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,634 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,641 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,648 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,659 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,671 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,729 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,738 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:20,739 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:745, Perfil: Moderado) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 14:22:20,748 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,752 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,760 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,764 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,775 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,789 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,801 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,813 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (a))} {position: line: 2, column: 1, offset: 17} for query: '\n                MATCH (n:News), (a:Analysis)\n                WHERE elementId(n) = $news_id AND elementId(a) = $analysis_id\n                MERGE (n)-[:HAS_ANALYSIS]->(a)\n                '
2025-05-31 14:22:20,813 - src.news_processor - INFO - Análise (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:746, Perfil: Agressivo) criada e ligada à Notícia (ID: 4:7f0b0961-3f50-4702-aa45-6ca7c5b3de8e:739).
2025-05-31 14:22:20,821 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,828 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,833 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,840 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (e))} {position: line: 2, column: 1, offset: 25} for query: "\n                        MATCH (a:Analysis), (e:Company)\n                        WHERE elementId(a) = $analysis_id AND elementId(e) = $entity_id\n                        MERGE (a)-[:ANALYZES_ENTITY {entity_type: 'Company'}]->(e)\n                        "
2025-05-31 14:22:20,851 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,865 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,877 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (ea))} {position: line: 2, column: 1, offset: 21} for query: "\n                    MATCH (a:Analysis), (ea:EconomicActivity)\n                    WHERE elementId(a) = $analysis_id AND elementId(ea) = $activity_id\n                    MERGE (a)-[:ANALYZES_ACTIVITY {activity_type: 'Sector Focus'}]->(ea)\n                    "
2025-05-31 14:22:20,878 - __main__ - INFO - Processamento de notícias concluído.
2025-05-31 14:22:20,878 - __main__ - INFO - --- Resultado da análise para notícia 1 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 14:22:20,878 - __main__ - INFO -   Perfil Conservador: Pessoal=2.5, Setorial=3.5
2025-05-31 14:22:20,878 - __main__ - INFO -     Just. Pessoal: The news about the increase in the IOF and the call for structural reforms by prominent businessmen like Rubens Menin and Walter Schalka could create uncertainty and potential challenges for a Conservative investor's portfolio. The focus on the need for reforms and cost-cutting in the public sector may lead to market volatility and impact investment decisions, warranting a slightly poor/challenging scenario.
2025-05-31 14:22:20,878 - __main__ - INFO -     Just. Setorial: The news highlights the concerns of key players in the Construction and Financial Consulting sectors, such as MRV Engenharia, Suzano Papel e Celulose, and XP Investimentos. The push for reforms and the negative effects of the IOF increase on credit, exchange rates, and long-term savings could lead to sector-wide adjustments and potential opportunities for companies to adapt and innovate, resulting in a neutral or mixed scenario.
2025-05-31 14:22:20,878 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=3.0
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Pessoal: For an investor with a Moderate profile, the news indicates a mixed impact. On one hand, the calls for structural reforms and spending cuts can bring stability and potentially improve the overall economic environment, which could benefit a diversified portfolio. On the other hand, the uncertainty surrounding the government's fiscal policies and the potential effects on credit, exchange rates, and long-term savings could introduce some volatility and risk, impacting the investor's moderate-risk portfolio.
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Setorial: The news highlights the concerns and demands of key entrepreneurs and entities in the Construction and Financial Consulting sectors regarding the recent increase in the IOF tax. The sectoral impact is slightly negative as the discussions around fiscal reforms and spending cuts could lead to short-term disruptions in these sectors. However, the long-term benefits of structural changes could enhance the sectors' stability and performance, balancing out the negative aspects.
2025-05-31 14:22:20,879 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.25, Setorial=4.5
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Pessoal: The news highlights the concerns of prominent businessmen like Rubens Menin from MRV Engenharia and Walter Schalka from Suzano Papel e Celulose, advocating for structural reforms and fiscal responsibility. These proposed measures could lead to a more stable economic environment, potentially benefiting an Aggressive investor by creating new investment opportunities and improving market conditions.
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Setorial: The news underscores the importance of fiscal reforms and cost-cutting measures in response to the increase in the IOF tax. This proactive stance from key players in the Construction and Financial Consulting sectors, represented by MRV Engenharia and Suzano Papel e Celulose, signals a positive outlook for these industries. The sectoral impact score is high as these reforms could enhance efficiency and profitability within the sectors.
2025-05-31 14:22:20,879 - __main__ - INFO - --- Resultado da análise para notícia 2 (Título: Reação ao IOF: empresários defendem reformas e cor...) ---
2025-05-31 14:22:20,879 - __main__ - INFO -   Perfil Conservador: Pessoal=2.5, Setorial=2.75
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Pessoal: For the Conservative investor profile, the news about the increase in the IOF and the calls for structural reforms and public spending cuts can create uncertainty and slightly negative implications for the investment portfolio. The focus on reform and cost-cutting measures may lead to market volatility and impact investments in the Financial sector, potentially affecting the investor's conservative strategy.
2025-05-31 14:22:20,879 - __main__ - INFO -     Just. Setorial: The news highlights concerns from key figures in the Construction and Financial sectors, such as MRV Engenharia and Suzano Papel e Celulose. The push for reforms and the negative effects of the IOF increase on credit, exchange rates, and long-term savings indicate a challenging scenario for these sectors. The sectoral impact is slightly negative as the calls for reform may introduce uncertainties and hinder sectoral growth prospects.
2025-05-31 14:22:20,880 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=3.75
2025-05-31 14:22:20,880 - __main__ - INFO -     Just. Pessoal: For a Moderate investor, the news about the increase in the IOF and the call for structural reforms by prominent business figures could lead to a slightly challenging scenario. The uncertainty and potential impact on government spending and economic policies may create some market volatility, requiring a cautious approach to investment decisions.
2025-05-31 14:22:20,880 - __main__ - INFO -     Just. Setorial: The news impacts the Construction and Financial sectors, particularly companies like Suzano and MRV, as it highlights the need for fiscal reforms and cost-cutting measures. The sectoral impact score is slightly positive as the push for reforms could lead to long-term benefits for these sectors, despite the short-term challenges posed by the increased IOF.
2025-05-31 14:22:20,880 - __main__ - INFO -   Perfil Agressivo: Pessoal=3.5, Setorial=3.75
2025-05-31 14:22:20,880 - __main__ - INFO -     Just. Pessoal: For an Aggressive investor profile, the news about the reaction to the IOF increase and the call for structural reforms and public spending cuts can lead to a mixed impact. On one hand, the push for reforms could signal potential long-term benefits for the economy, but on the other hand, the uncertainty and potential short-term disruptions in the financial sector might introduce volatility in the investor's portfolio.
2025-05-31 14:22:20,880 - __main__ - INFO -     Just. Setorial: The news impacts the Construction and Financial sectors, with companies like MRV Engenharia and Suzano Papel e Celulose actively participating in the debate. The focus on structural reforms and fiscal responsibility could benefit these sectors in the long run by creating a more stable economic environment. However, the immediate pushback against the IOF increase could create short-term challenges for financial operations and investments, leading to a slightly challenging scenario for the sectors involved.
2025-05-31 14:22:20,880 - __main__ - INFO - --- Resultado da análise para notícia 3 (Título: Menin e Flavio Rocha defendem Reforma Administrati...) ---
2025-05-31 14:22:20,880 - __main__ - INFO -   Perfil Conservador: Pessoal=2.75, Setorial=3.5
2025-05-31 14:22:20,881 - __main__ - INFO -     Just. Pessoal: For the Conservative investor profile, the news about the defense of Administrative Reform by key business figures may create uncertainty in the market due to potential changes in government policies. This uncertainty could lead to volatility in the Construction and Retail sectors, impacting the investor's portfolio negatively.
2025-05-31 14:22:20,881 - __main__ - INFO -     Just. Setorial: The focus on Administrative Reform to modernize the State can have a positive impact on the Construction and Retail sectors in the long term. If the reform leads to more efficient public spending and economic growth, companies like MRV Engenharia e Participacoes SA could benefit from increased infrastructure investments and consumer confidence, potentially driving sectoral growth.
2025-05-31 14:22:20,881 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=4.5
2025-05-31 14:22:20,881 - __main__ - INFO -     Just. Pessoal: The news about the defense of Administrative Reform by key business figures like Flavio Rocha and Rubens Menin could bring some uncertainty to the market, potentially impacting moderate investors' portfolios. While the call for structural reforms is generally positive for the economy, the potential changes in public spending and fiscal policies could create short-term volatility, leading to a slightly challenging scenario for a moderate investor.
2025-05-31 14:22:20,881 - __main__ - INFO -     Just. Setorial: The focus on Administrative Reform and the need for structural changes highlighted in the news can have a significantly positive impact on the Construction and Retail sectors. Companies like MRV Engenharia e Participacoes SA could benefit from a more efficient public sector and a streamlined regulatory environment, leading to improved growth prospects and operational efficiency. Therefore, the sectoral impact score is relatively high, indicating a favorable scenario for the entities involved.
2025-05-31 14:22:20,881 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.25, Setorial=4.5
2025-05-31 14:22:20,881 - __main__ - INFO -     Just. Pessoal: For an Aggressive investor, the news advocating for the approval of the Administrative Reform and the modernization of the Brazilian State can be seen as a positive sign. The proposed structural reforms and focus on efficiency in public resource management could lead to a more business-friendly environment, potentially benefiting investments and economic growth.
2025-05-31 14:22:20,882 - __main__ - INFO -     Just. Setorial: The news highlights the support from key figures like Flavio Rocha and Rubens Menin for the Administrative Reform, emphasizing the need to simplify taxes, modernize the State, and unlock economic growth. This stance could positively impact the Construction and Retail sectors by fostering a more efficient and sustainable economic environment, potentially attracting more investments and driving sectoral growth.
2025-05-31 14:22:20,882 - __main__ - INFO - --- Resultado da análise para notícia 4 (Título: Na guerra comercial entre EUA e China, latino-amer...) ---
2025-05-31 14:22:20,882 - __main__ - INFO -   Perfil Conservador: Pessoal=2.5, Setorial=2.5
2025-05-31 14:22:20,882 - __main__ - INFO -     Just. Pessoal: The news of Latin American countries aligning with China in the US-China trade war could bring increased uncertainty and potential risks to the investor with a Conservative profile, as it may impact the stability of their portfolio due to geopolitical tensions. This shift in trade alliances could lead to fluctuations in the stock prices of the technology companies like Apple, Amazon, Facebook, and Microsoft, affecting the investor's conservative portfolio.
2025-05-31 14:22:20,883 - __main__ - INFO -     Just. Setorial: The news of Latin American countries favoring closer economic ties with China over the US could have a mixed impact on the Technology, Information Technology, and Retail sectors. While it may open up new market opportunities for these sectors in Latin America, the potential disruption in global trade dynamics and the uncertainty surrounding the US-China relations could introduce challenges and risks for the companies operating in these sectors.
2025-05-31 14:22:20,883 - __main__ - INFO -   Perfil Moderado: Pessoal=3.5, Setorial=2.5
2025-05-31 14:22:20,883 - __main__ - INFO -     Just. Pessoal: For the Moderate investor profile, the news of Latin American countries aligning with China in the US-China trade war could bring a slightly challenging scenario. This alignment may introduce some uncertainty in the global market, impacting the investor's portfolio diversification and potentially leading to increased volatility in the technology and retail sectors where the identified entities operate.
2025-05-31 14:22:20,883 - __main__ - INFO -     Just. Setorial: The news indicates a shift in economic alliances towards China in Latin America, potentially affecting the Technology, Information Technology, and Retail sectors where the companies Apple Inc BDR, Amazon.com Inc BDR, Facebook Inc BDR, and Microsoft Corp BDR operate. This shift may pose challenges in terms of trade relations, supply chains, and market dynamics, leading to a slightly negative impact on the sector/company performance.
2025-05-31 14:22:20,883 - __main__ - INFO -   Perfil Agressivo: Pessoal=4.5, Setorial=3.75
2025-05-31 14:22:20,883 - __main__ - INFO -     Just. Pessoal: Considering the Aggressive investor profile, the news indicates a positive impact on the portfolio as the shift towards closer economic ties with China in Latin America can benefit technology companies like Apple, Amazon, Facebook, and Microsoft, potentially leading to increased market opportunities and growth. This alignment with China may offer new avenues for expansion and revenue generation for these tech giants, aligning with the aggressive investor's risk appetite for growth and higher returns.
2025-05-31 14:22:20,883 - __main__ - INFO -     Just. Setorial: The news suggests a favorable scenario for the Technology sector, particularly for companies like Apple, Amazon, Facebook, and Microsoft, as Latin American countries express a preference for closer economic relations with China over the US. This preference could enhance market access, partnerships, and investment opportunities for these tech companies in the region, potentially boosting their performance and revenue streams. However, there might be some challenges related to geopolitical tensions and trade dynamics between the US and China that could impact the sector's stability and growth prospects.
2025-05-31 14:22:20,884 - __main__ - INFO - 4/5 notícias efetivamente processadas e resultaram em uma análise.
2025-05-31 14:22:20,884 - src.neo4j_connection - INFO - Conexão Neo4j fechada.
2025-05-31 14:22:20,884 - __main__ - INFO - Aplicação de análise de notícias finalizada.
